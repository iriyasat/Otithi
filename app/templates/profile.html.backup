{% extends "base.html" %}

{% set page_title = "My Profile" %}

{% block title %}{{ page_title }} | Otithi{% endblock %}

{% block body_class %}{{ current_user.user_type if current_user else 'guest' }}-dashboard{% endblock %}

{% block extra_css %}
<link href="{{ url_for('static', filename='css/dashboard.css') }}" rel="stylesheet">
<link href="{{ url_for('static', filename='css/profile.css') }}" rel="stylesheet">
{% endblock %}
    border: 4px solid rgba(255, 255, 255, 0.2);
}

.profile-name {
    font-size: 2rem;
    font-weight: 700;
    margin-bottom: 0.5rem;
}

.profile-role {
    font-size: 1.1rem;
    opacity: 0.9;
    margin-bottom: 0.5rem;
}

.profile-member-since {
    opacity: 0.8;
    font-size: 0.9rem;
}

.profile-verification-badge {
    margin-top: 0.5rem;
    padding: 0.25rem 0.75rem;
    border-radius: 20px;
    background: rgba(255, 255, 255, 0.15);
    display: inline-block;
    font-size: 0.85rem;
}

.profile-verification-badge i {
    margin-right: 0.5rem;
}

.profile-card {
    background: var(--neutral-0);
    border: 1px solid var(--neutral-200);
    border-radius: var(--radius-lg);
    box-shadow: var(--shadow-sm);
    margin-bottom: var(--space-6);
    overflow: hidden;
}

.profile-card-header {
    background: var(--neutral-50);
    padding: var(--space-4) var(--space-6);
    border-bottom: 1px solid var(--neutral-200);
}

.profile-card-title {
    font-size: 1.25rem;
    font-weight: 600;
    margin: 0;
    color: var(--neutral-800);
}

.profile-card-body {
    padding: var(--space-6);
}

.stat-card {
    background: var(--neutral-0);
    border: 1px solid var(--neutral-200);
    border-radius: var(--radius-md);
    padding: var(--space-4);
    text-align: center;
    transition: all 0.3s ease;
    cursor: pointer;
    height: 100%;
}

.stat-card:hover {
    transform: translateY(-2px);
    box-shadow: var(--shadow-md);
    border-color: var(--primary-300);
}

.stat-icon {
    width: 60px;
    height: 60px;
    border-radius: 50%;
    background: var(--primary-100);
    color: var(--primary-600);
    display: flex;
    align-items: center;
    justify-content: center;
    margin: 0 auto 1rem;
    font-size: 1.5rem;
}

.stat-value {
    font-size: 2rem;
    font-weight: 700;
    color: var(--neutral-800);
    margin-bottom: 0.5rem;
}

.stat-label {
    color: var(--neutral-600);
    font-size: 0.9rem;
    font-weight: 500;
}

.btn-profile {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.75rem 1.5rem;
    border-radius: var(--radius-md);
    font-weight: 600;
    text-decoration: none;
    transition: all 0.3s ease;
    border: 2px solid transparent;
}

.btn-profile-primary {
    background: var(--primary-500);
    color: white;
}

.btn-profile-primary:hover {
    background: var(--primary-600);
    color: white;
    transform: translateY(-1px);
}

.btn-profile-secondary {
    background: var(--neutral-200);
    color: var(--neutral-700);
}

.btn-profile-secondary:hover {
    background: var(--neutral-300);
    color: var(--neutral-800);
}

.btn-profile-outline {
    background: transparent;
    color: var(--primary-500);
    border-color: var(--primary-500);
}

.btn-profile-outline:hover {
    background: var(--primary-500);
    color: white;
}

.quick-action-btn {
    width: 100%;
    padding: 1rem;
    border: 2px solid var(--neutral-200);
    border-radius: var(--radius-md);
    background: var(--neutral-0);
    color: var(--neutral-700);
    text-decoration: none;
    display: flex;
    align-items: center;
    gap: 0.75rem;
    transition: all 0.3s ease;
    margin-bottom: 0.75rem;
}

.quick-action-btn:hover {
    border-color: var(--primary-300);
    background: var(--primary-50);
    color: var(--primary-700);
    transform: translateX(5px);
}

.quick-action-btn.danger {
    border-color: var(--danger-300);
    color: var(--danger-600);
}

.quick-action-btn.danger:hover {
    border-color: var(--danger-400);
    background: var(--danger-50);
    color: var(--danger-700);
}

.quick-action-icon {
    width: 20px;
    text-align: center;
}

.profile-actions {
    display: flex;
    gap: 1rem;
    flex-wrap: wrap;
    margin-top: 2rem;
}

.file-upload-area {
    border: 2px dashed var(--neutral-300);
    border-radius: var(--radius-md);
    padding: 2rem;
    text-align: center;
    cursor: pointer;
    transition: all 0.3s ease;
    background: var(--neutral-50);
}

.file-upload-area:hover {
    border-color: var(--primary-400);
    background: var(--primary-50);
}

.file-upload-area i {
    font-size: 2rem;
    color: var(--neutral-500);
    margin-bottom: 1rem;
}

.profile-picture-container {
    position: relative;
    display: inline-block;
}

.current-profile-picture {
    width: 150px;
    height: 150px;
    border-radius: 50%;
    object-fit: cover;
    border: 4px solid var(--neutral-200);
}

.profile-picture-placeholder {
    width: 150px;
    height: 150px;
    border-radius: 50%;
    background: var(--neutral-200);
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 3rem;
    color: var(--neutral-500);
    border: 4px solid var(--neutral-200);
}

.activity-item {
    padding: 1rem;
    border-bottom: 1px solid var(--neutral-200);
    display: flex;
    align-items: center;
    gap: 1rem;
}

.activity-item:last-child {
    border-bottom: none;
}

.activity-icon {
    width: 40px;
    height: 40px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    font-size: 1rem;
}

.activity-content {
    flex: 1;
}

.activity-text {
    margin: 0 0 0.25rem 0;
    font-weight: 500;
}

.activity-time {
    color: var(--neutral-600);
    font-size: 0.85rem;
}

.bg-primary { background-color: var(--primary-500); }
.bg-success { background-color: var(--success-500); }
.bg-warning { background-color: var(--warning-500); }
.bg-danger { background-color: var(--danger-500); }
.bg-info { background-color: var(--info-500); }

.empty-state {
    text-align: center;
    padding: 3rem 2rem;
    color: var(--neutral-500);
}

.empty-state-icon {
    font-size: 3rem;
    margin-bottom: 1rem;
    opacity: 0.6;
}

.empty-state-text {
    font-size: 1.1rem;
    margin: 0;
}

.clickable-stat {
    cursor: pointer;
}

.clickable-stat:hover {
    transform: translateY(-3px);
}

/* Form styling improvements */
.form-group {
    margin-bottom: 1.5rem;
}

.form-label {
    font-weight: 600;
    color: var(--neutral-700);
    margin-bottom: 0.5rem;
    display: block;
}

.form-control {
    width: 100%;
    padding: 0.75rem 1rem;
    border: 2px solid var(--neutral-300);
    border-radius: var(--radius-md);
    font-size: 1rem;
    transition: border-color 0.3s ease;
}

.form-control:focus {
    outline: none;
    border-color: var(--primary-400);
    box-shadow: 0 0 0 3px rgba(var(--primary-rgb), 0.1);
}

.form-control[readonly] {
    background-color: var(--neutral-100);
    color: var(--neutral-600);
}

.form-text {
    font-size: 0.875rem;
    color: var(--neutral-600);
    margin-top: 0.25rem;
}

/* Responsive improvements */
@media (max-width: 768px) {
    .profile-header {
        padding: var(--space-6) 0;
    }
    
    .profile-name {
        font-size: 1.5rem;
    }
    
    .profile-actions {
        flex-direction: column;
    }
    
    .btn-profile {
        width: 100%;
        justify-content: center;
    }
    
    .stat-card {
        margin-bottom: 1rem;
    }
}
</style>
{% endblock %}

{% block content %}
<div class="profile-container">
    <div class="profile-header">
        <div class="container">
            <div class="row align-items-center justify-content-center">
                <div class="col-auto">
                    <div class="profile-avatar-container">
                        {% if current_user and current_user.profile_photo %}
                            <img src="{{ url_for('static', filename='uploads/' + current_user.profile_photo) }}" alt="{{ current_user.name if current_user else 'User' }}" class="profile-avatar-image">
                        {% else %}
                            <div class="profile-avatar-placeholder">
                                <i class="fas fa-user"></i>
                            </div>
                        {% endif %}
                    </div>
                </div>
                <div class="col-auto profile-header-content">
                    <div class="profile-header-info">
                        <h1 class="profile-name">{{ current_user.full_name if current_user and current_user.full_name else current_user.name if current_user else 'User Profile' }}</h1>
                        <p class="profile-role">{{ (current_user.user_type|title) if current_user else 'Guest' }} Profile</p>
                        <small class="profile-member-since">Member since {{ current_user.join_date.strftime('%B %Y') if current_user and current_user.join_date else current_user.joined_date.strftime('%B %Y') if current_user and current_user.joined_date else 'Recently' }}</small>
                        <div class="profile-verification-badge">
                            {% if current_user and current_user.verified %}
                                <i class="fas fa-check-circle"></i>Verified Account
                            {% else %}
                                <i class="fas fa-clock"></i>Unverified Account
                            {% endif %}
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="container">
        <!-- Profile Statistics -->
        <div class="row profile-stats">
            <div class="col-md-3 col-sm-6 mb-4">
                <div class="stat-card">
                    <div class="stat-icon">
                        <i class="fas fa-calendar-check"></i>
                    </div>
                    <h3 class="stat-value">{{ stats.total_bookings if stats else 0 }}</h3>
                    <p class="stat-label">Total Bookings</p>
                </div>
            </div>
            <div class="col-md-3 col-sm-6 mb-4">
                <div class="stat-card">
                    <div class="stat-icon">
                        <i class="fas fa-star"></i>
                    </div>
                    <h3 class="stat-value">{{ "%.1f"|format(stats.average_rating if stats else 0) }}</h3>
                    <p class="stat-label">Average Rating</p>
                </div>
            </div>
            <div class="col-md-3 col-sm-6 mb-4">
                <div class="stat-card">
                    <div class="stat-icon">
                        <i class="fas fa-heart"></i>
                    </div>
                    <h3 class="stat-value">{{ stats.favorites if stats else 0 }}</h3>
                    <p class="stat-label">Favorite Listings</p>
                </div>
            </div>
            <div class="col-md-3 col-sm-6 mb-4">
                <div class="stat-card clickable-stat" onclick="showUserReviews()">
                    <div class="stat-icon">
                        <i class="fas fa-comment"></i>
                    </div>
                    <h3 class="stat-value">{{ stats.reviews_given if stats else 0 }}</h3>
                    <p class="stat-label">Reviews Given</p>
                    <small class="text-muted">Click to view all</small>
                </div>
            </div>
        </div>

        <div class="row">
            <!-- Profile Information Card -->
            <div class="col-lg-8 mb-4">
                <div class="profile-card">
                    <div class="profile-card-header">
                        <h5 class="profile-card-title">
                            <i class="fas fa-user-edit"></i>Profile Information
                        </h5>
                    </div>
                    <div class="profile-card-body">
                        <form method="POST" action="{{ url_for('profile.update_profile') }}" enctype="multipart/form-data" id="profileForm" class="profile-form">
                            <div class="row">
                                <div class="col-md-6 form-group">
                                    <label for="full_name" class="form-label">Full Name</label>
                                    <input type="text" class="form-control" id="full_name" name="full_name" 
                                           value="{{ current_user.full_name if current_user and current_user.full_name else current_user.name if current_user else '' }}" {{ 'readonly' if not edit_mode else 'required' }}>
                                </div>
                                <div class="col-md-6 form-group">
                                    <label for="email" class="form-label">Email Address</label>
                                    <input type="email" class="form-control" id="email" name="email" 
                                           value="{{ current_user.email if current_user else '' }}" readonly>
                                    <div class="form-text">Email cannot be changed</div>
                                </div>
                            </div>
                            
                            <div class="row">
                                <div class="col-md-6 form-group">
                                    <label for="phone" class="form-label">Phone Number</label>
                                    <input type="tel" class="form-control" id="phone" name="phone" 
                                           value="{{ current_user.phone if current_user else '' }}" placeholder="+880 1XXX-XXXXXX" {{ 'readonly' if not edit_mode else '' }}>
                                </div>
                                <div class="col-md-6 form-group">
                                    <label for="user_type" class="form-label">Account Type</label>
                                    <input type="text" class="form-control" id="user_type" name="user_type" 
                                           value="{{ (current_user.user_type|title) if current_user else 'Guest' }}" readonly>
                                    <div class="form-text">Contact admin to change account type</div>
                                </div>
                            </div>

                            <div class="form-group">
                                <label for="bio" class="form-label">Bio</label>
                                <textarea class="form-control" id="bio" name="bio" rows="3" 
                                          placeholder="Tell us about yourself..." {{ 'readonly' if not edit_mode else '' }}>{{ current_user.bio if current_user else '' }}</textarea>
                            </div>

                            <!-- Hidden file input always present -->
                            <input type="file" class="d-none" id="profile_photo" name="profile_photo" accept="image/*">
                            
                            {% if edit_mode %}
                            <div class="form-group">
                                <label for="profile_photo_visible" class="form-label">Profile Photo</label>
                                <div class="file-upload-area" onclick="document.getElementById('profile_photo').click()">
                                    <i class="fas fa-camera"></i>
                                    <p>Click to upload a new profile photo</p>
                                    <small>JPG, PNG, max 5MB</small>
                                </div>
                            </div>
                            {% endif %}

                            <div class="profile-actions">
                                {% if edit_mode %}
                                    <button type="submit" class="btn-profile btn-profile-primary">
                                        <i class="fas fa-save"></i>Save Changes
                                    </button>
                                    <a href="{{ url_for('profile.profile') }}" class="btn-profile btn-profile-secondary">
                                        <i class="fas fa-times"></i>Cancel
                                    </a>
                                {% else %}
                                    <a href="{{ url_for('profile.edit_profile') if url_for else '#' }}" class="btn-profile btn-profile-primary">
                                        <i class="fas fa-edit"></i>Edit Profile
                                    </a>
                                    <a href="{{ url_for('main.dashboard') if url_for else '#' }}" class="btn-profile btn-profile-outline">
                                        <i class="fas fa-arrow-left"></i>Back to Dashboard
                                    </a>
                                {% endif %}
                            </div>
                        </form>
                    </div>
                </div>
            </div>

            <!-- Profile Picture & Quick Actions -->
            <div class="col-lg-4 mb-4">
                <div class="profile-card">
                    <div class="profile-card-header">
                        <h5 class="profile-card-title">
                            <i class="fas fa-image"></i>Profile Picture
                        </h5>
                    </div>
                    <div class="profile-card-body text-center">
                        <div class="profile-picture-container">
                            {% if current_user and current_user.profile_photo %}
                                <img src="{{ url_for('static', filename='uploads/' + current_user.profile_photo) }}" alt="{{ current_user.full_name if current_user.full_name else current_user.name }}" class="profile-picture">
                            {% else %}
                                <div class="profile-picture-placeholder">
                                    <i class="fas fa-user"></i>
                                </div>
                            {% endif %}
                            {% if edit_mode %}
                            <div class="photo-upload-overlay" onclick="console.log('Upload overlay clicked'); document.getElementById('profile_photo').click()">
                                <i class="fas fa-camera"></i>
                            </div>
                            {% endif %}
                        </div>
                        <p class="text-muted small mb-3">{{ current_user.full_name if current_user and current_user.full_name else current_user.name if current_user else 'User' }}</p>
                        {% if edit_mode %}
                        <button type="button" class="btn-profile btn-profile-secondary" onclick="console.log('Change photo button clicked'); document.getElementById('profile_photo').click()">
                            <i class="fas fa-camera"></i>Change Photo
                        </button>
                        {% endif %}
                    </div>
                </div>

                <!-- Account Actions -->
                <div class="profile-card">
                    <div class="profile-card-header">
                        <h5 class="profile-card-title">
                            <i class="fas fa-cog"></i>Account Actions
                        </h5>
                    </div>
                    <div class="profile-card-body">
                        <div class="quick-actions-grid">
                            <button type="button" class="quick-action-btn" data-bs-toggle="modal" data-bs-target="#changePasswordModal">
                                <i class="fas fa-key quick-action-icon"></i>Change Password
                            </button>
                            <button type="button" class="quick-action-btn" onclick="downloadUserData()">
                                <i class="fas fa-download quick-action-icon"></i>Download My Data
                            </button>
                            <hr>
                            <button type="button" class="quick-action-btn danger" data-bs-toggle="modal" data-bs-target="#deleteAccountModal">
                                <i class="fas fa-trash quick-action-icon"></i>Delete Account
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Recent Activity -->
        <div class="row">
            <div class="col-12">
                <div class="profile-card">
                    <div class="profile-card-header">
                        <h5 class="profile-card-title">
                            <i class="fas fa-clock"></i>Recent Activity
                        </h5>
                    </div>
                    <div class="profile-card-body">
                        {% if recent_activities %}
                            <div class="activity-list">
                                {% for activity in recent_activities %}
                                <div class="activity-item">
                                    <div class="activity-icon bg-{{ activity.color }}">
                                        <i class="{{ activity.icon }}"></i>
                                    </div>
                                    <div class="activity-content">
                                        <p class="activity-text">{{ activity.action }}</p>
                                        {% if activity.status %}
                                            <span class="badge badge-{{ activity.color }}">{{ activity.status.title() }}</span>
                                        {% endif %}
                                        {% if activity.rating %}
                                            <span class="text-muted">- {{ activity.rating }}/5 stars</span>
                                        {% endif %}
                                        <small class="activity-time">{{ activity.date.strftime('%B %d, %Y at %I:%M %p') if activity.date else 'Date unavailable' }}</small>
                                    </div>
                                </div>
                                {% endfor %}
                            </div>
                        {% else %}
                            <div class="empty-state">
                                <i class="fas fa-history empty-state-icon"></i>
                                <p class="empty-state-text">No recent activity to display</p>
                            </div>
                        {% endif %}
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- User Reviews Modal -->
<div class="modal fade" id="userReviewsModal" tabindex="-1" aria-labelledby="userReviewsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="userReviewsModalLabel">
                    <i class="fas fa-comment me-2"></i>My Reviews
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div id="reviewsLoadingSpinner" class="text-center">
                    <div class="spinner-border" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                    <p class="mt-2">Loading your reviews...</p>
                </div>
                <div id="reviewsContent" style="display: none;">
                    <div id="reviewsList">
                        <!-- Reviews will be loaded here dynamically -->
                    </div>
                </div>
                <div id="noReviewsMessage" style="display: none;" class="text-center text-muted">
                    <i class="fas fa-comment-slash fa-3x mb-3"></i>
                    <p>You haven't written any reviews yet.</p>
                    <p>Start exploring and booking stays to share your experiences!</p>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<!-- Change Password Modal -->
<div class="modal fade" id="changePasswordModal" tabindex="-1" aria-labelledby="changePasswordModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="changePasswordModalLabel">
                    <i class="fas fa-key me-2"></i>Change Password
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form method="POST" action="{{ url_for('main.change_password') if url_for else '#' }}" id="changePasswordForm">
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="current_password" class="form-label">Current Password</label>
                        <input type="password" class="form-control" id="current_password" name="current_password" required>
                    </div>
                    <div class="mb-3">
                        <label for="new_password" class="form-label">New Password</label>
                        <input type="password" class="form-control" id="new_password" name="new_password" required minlength="8">
                        <div class="form-text">Password must be at least 8 characters long</div>
                    </div>
                    <div class="mb-3">
                        <label for="confirm_password" class="form-label">Confirm New Password</label>
                        <input type="password" class="form-control" id="confirm_password" name="confirm_password" required>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-save me-2"></i>Change Password
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Delete Account Modal -->
<div class="modal fade" id="deleteAccountModal" tabindex="-1" aria-labelledby="deleteAccountModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title" id="deleteAccountModalLabel">
                    <i class="fas fa-exclamation-triangle me-2"></i>Delete Account
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="alert alert-danger">
                    <strong>Warning!</strong> This action cannot be undone. All your data including bookings, reviews, and listings will be permanently deleted.
                </div>
                <p>To confirm account deletion, please type "<strong>DELETE</strong>" in the field below:</p>
                <form method="POST" action="{{ url_for('main.delete_account') if url_for else '#' }}" id="deleteAccountForm">
                    <div class="mb-3">
                        <input type="text" class="form-control" id="delete_confirmation" name="delete_confirmation" 
                               placeholder="Type DELETE to confirm" required>
                    </div>
                    <div class="mb-3">
                        <label for="delete_password" class="form-label">Enter your password to confirm:</label>
                        <input type="password" class="form-control" id="delete_password" name="delete_password" required>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" onclick="confirmDeleteAccount()">
                    <i class="fas fa-trash me-2"></i>Delete My Account
                </button>
            </div>
        </div>
    </div>
</div>

<script>
// Profile page JavaScript
document.addEventListener('DOMContentLoaded', function() {
    // Password confirmation validation
    const newPassword = document.getElementById('new_password');
    const confirmPassword = document.getElementById('confirm_password');
    
    function validatePasswords() {
        if (newPassword && confirmPassword && newPassword.value !== confirmPassword.value) {
            confirmPassword.setCustomValidity('Passwords do not match');
        } else if (confirmPassword) {
            confirmPassword.setCustomValidity('');
        }
    }
    
    if (newPassword && confirmPassword) {
        newPassword.addEventListener('input', validatePasswords);
        confirmPassword.addEventListener('input', validatePasswords);
    }
    
    // Profile photo preview - handles both header and sidebar profile pictures
    const profilePhotoInput = document.getElementById('profile_photo');
    if (profilePhotoInput) {
        console.log('Profile photo input found');
        profilePhotoInput.addEventListener('change', function(e) {
            console.log('File input changed');
            const file = e.target.files[0];
            if (file) {
                console.log('File selected:', file.name, file.size, file.type);
                
                // Validate file size (5MB limit)
                if (file.size > 5 * 1024 * 1024) {
                    alert('File size must be less than 5MB');
                    this.value = '';
                    return;
                }
                
                // Validate file type
                const allowedTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/gif'];
                if (!allowedTypes.includes(file.type)) {
                    alert('Please upload only JPG, PNG, or GIF files');
                    this.value = '';
                    return;
                }
                
                console.log('File validation passed, creating preview');
                const reader = new FileReader();
                reader.onload = function(e) {
                    console.log('FileReader loaded');
                    // Update header profile picture
                    const headerProfilePicture = document.querySelector('.profile-avatar-image');
                    const headerPlaceholder = document.querySelector('.profile-avatar-placeholder');
                    
                    if (headerProfilePicture) {
                        console.log('Updating header profile picture');
                        headerProfilePicture.src = e.target.result;
                    } else if (headerPlaceholder) {
                        console.log('Creating new header profile picture');
                        const img = document.createElement('img');
                        img.src = e.target.result;
                        img.className = 'profile-avatar-image';
                        img.alt = 'Profile Preview';
                        headerPlaceholder.parentNode.replaceChild(img, headerPlaceholder);
                    }
                    
                    // Update sidebar profile picture
                    const sidebarProfilePicture = document.querySelector('.profile-picture');
                    const sidebarPlaceholder = document.querySelector('.profile-picture-placeholder');
                    
                    if (sidebarProfilePicture) {
                        console.log('Updating sidebar profile picture');
                        sidebarProfilePicture.src = e.target.result;
                    } else if (sidebarPlaceholder) {
                        console.log('Creating new sidebar profile picture');
                        const img = document.createElement('img');
                        img.src = e.target.result;
                        img.className = 'profile-picture';
                        img.alt = 'Profile Preview';
                        sidebarPlaceholder.parentNode.replaceChild(img, sidebarPlaceholder);
                    }
                };
                reader.readAsDataURL(file);
            }
        });
    } else {
        console.log('Profile photo input NOT found');
    }
                        const img = document.createElement('img');
                        img.src = e.target.result;
                        img.className = 'profile-picture';
                        img.alt = 'Profile Preview';
                        sidebarPlaceholder.parentNode.replaceChild(img, sidebarPlaceholder);
                    }
                };
                reader.readAsDataURL(file);
            }
        });
    }
});

// Add click event listener for reviews stat card
document.addEventListener('DOMContentLoaded', function() {
    const reviewsStatCard = document.querySelector('.stat-card.clickable-stat');
    if (reviewsStatCard) {
        reviewsStatCard.addEventListener('click', function(e) {
            e.preventDefault();
            e.stopPropagation();
            showUserReviews();
        });
    }
});

function downloadUserData() {
    // Create and trigger download of user data
    const userData = {
        name: {{ (current_user.name|tojson) if current_user else '""' }},
        email: {{ (current_user.email|tojson) if current_user else '""' }},
        phone: {{ (current_user.phone|tojson) if current_user else '""' }},
        user_type: {{ (current_user.user_type|tojson) if current_user else '""' }},
        joined_date: {{ (current_user.join_date.strftime('%Y-%m-%d')|tojson) if current_user and current_user.join_date else '""' }},
        bio: {{ (current_user.bio|tojson) if current_user else '""' }},
        verified: {{ (current_user.verified|lower) if current_user else 'false' }},
        stats: {
            total_bookings: {{ stats.total_bookings if stats else 0 }},
            average_rating: {{ stats.average_rating if stats else 0 }},
            favorites: {{ stats.favorites if stats else 0 }},
            reviews_given: {{ stats.reviews_given if stats else 0 }}
        }
    };
    
    const dataStr = JSON.stringify(userData, null, 2);
    const dataBlob = new Blob([dataStr], {type: 'application/json'});
    const url = URL.createObjectURL(dataBlob);
    const link = document.createElement('a');
    link.href = url;
    link.download = 'my_otithi_data.json';
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
    URL.revokeObjectURL(url);
}

function confirmDeleteAccount() {
    const confirmation = document.getElementById('delete_confirmation');
    const password = document.getElementById('delete_password');
    
    if (!confirmation || confirmation.value !== 'DELETE') {
        alert('Please type DELETE exactly as shown to confirm account deletion.');
        return;
    }
    
    if (!password || !password.value) {
        alert('Please enter your password to confirm account deletion.');
        return;
    }
    
    if (confirm('Are you absolutely sure you want to delete your account? This action cannot be undone.')) {
        document.getElementById('deleteAccountForm').submit();
    }
}

function showUserReviews() {
    // Show the modal
    const modalElement = document.getElementById('userReviewsModal');
    
    if (!modalElement) {
        return;
    }
    
    const modal = new bootstrap.Modal(modalElement);
    modal.show();
    
    // Show loading spinner
    document.getElementById('reviewsLoadingSpinner').style.display = 'block';
    document.getElementById('reviewsContent').style.display = 'none';
    document.getElementById('noReviewsMessage').style.display = 'none';
    
    // Fetch user reviews
    fetch('/api/user/reviews')
        .then(response => {
            return response.json();
        })
        .then(data => {
            document.getElementById('reviewsLoadingSpinner').style.display = 'none';
            
            if (data.success && data.reviews && data.reviews.length > 0) {
                displayUserReviews(data.reviews);
                document.getElementById('reviewsContent').style.display = 'block';
            } else {
                document.getElementById('noReviewsMessage').style.display = 'block';
            }
        })
        .catch(error => {
            console.error('Error fetching reviews:', error);
            document.getElementById('reviewsLoadingSpinner').style.display = 'none';
            document.getElementById('noReviewsMessage').style.display = 'block';
            document.getElementById('noReviewsMessage').innerHTML = `
                <i class="fas fa-exclamation-triangle fa-3x mb-3 text-danger"></i>
                <p>Error loading reviews. Please try again later.</p>
            `;
        });
}

function displayUserReviews(reviews) {
    const reviewsList = document.getElementById('reviewsList');
    
    const reviewsHtml = reviews.map(review => `
        <div class="review-card mb-3 border rounded p-3">
            <div class="d-flex justify-content-between align-items-start mb-2">
                <div>
                    <h6 class="review-listing-title mb-1">
                        <a href="/listings/${review.listing_id}" target="_blank" class="text-decoration-none">
                            ${review.listing_title || 'View Listing'}
                        </a>
                    </h6>
                    <div class="review-rating mb-2">
                        ${'★'.repeat(Math.floor(review.rating))}${'☆'.repeat(5 - Math.floor(review.rating))}
                        <span class="text-muted ms-1">${review.rating}/5</span>
                    </div>
                </div>
                <small class="text-muted">${new Date(review.created_date).toLocaleDateString()}</small>
            </div>
            <p class="review-comment mb-0">${review.comment}</p>
        </div>
    `).join('');
    
    reviewsList.innerHTML = reviewsHtml;
}
</script>


{% endblock %}
